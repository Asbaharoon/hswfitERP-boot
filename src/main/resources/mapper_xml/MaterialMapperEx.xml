<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hswift.erp.datasource.mappers.MaterialMapperEx">
    <resultMap extends="com.hswift.erp.datasource.mappers.MaterialMapper.BaseResultMap" id="ResultMapList" type="com.hswift.erp.datasource.entities.MaterialVo4Unit">
        <result column="unitName" jdbcType="VARCHAR" property="unitName" />
        <result column="categoryName" jdbcType="VARCHAR" property="categoryName" />
        <result column="bar_code" jdbcType="VARCHAR" property="mBarCode" />
        <result column="commodity_unit" jdbcType="VARCHAR" property="commodityUnit" />
        <result column="purchase_decimal" jdbcType="VARCHAR" property="purchaseDecimal" />
        <result column="commodity_decimal" jdbcType="VARCHAR" property="commodityDecimal" />
        <result column="wholesale_decimal" jdbcType="VARCHAR" property="wholesaleDecimal" />
        <result column="low_decimal" jdbcType="VARCHAR" property="lowDecimal" />
    </resultMap>

    <resultMap extends="com.hswift.erp.datasource.mappers.MaterialMapper.BaseResultMap" id="ResultAndUnitMap" type="com.hswift.erp.datasource.entities.MaterialVo4Unit">
        <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
    </resultMap>

    <select id="selectByConditionMaterial" parameterType="com.hswift.erp.datasource.entities.MaterialExample" resultMap="ResultMapList">
        select m.*,u.name unitName, mc.name categoryName, me.bar_code,
        me.purchase_decimal, me.commodity_decimal, me.wholesale_decimal,me.low_decimal
        FROM hswift_material m
        left JOIN hswift_material_extend me on m.id = me.material_id and ifnull(me.delete_Flag,'0') !='1'
        left JOIN hswift_unit u on m.unit_id = u.id and ifnull(u.delete_Flag,'0') !='1'
        left JOIN hswift_material_category mc on m.category_id = mc.id and ifnull(mc.delete_Flag,'0') !='1'
        where 1=1
        and me.default_flag=1
        <if test="barCode != null">
            <bind name="bindBarCode" value="'%'+barCode+'%'"/>
            and me.bar_code like #{bindBarCode}
        </if>
        <if test="name != null">
            <bind name="bindName" value="'%'+name+'%'"/>
            and m.name like #{bindName}
        </if>
        <if test="standard != null">
            <bind name="bindStandard" value="'%'+standard+'%'"/>
            and m.standard like #{bindStandard}
        </if>
        <if test="model != null">
            <bind name="bindModel" value="'%'+model+'%'"/>
            and m.model like #{bindModel}
        </if>
        <if test="idList.size()>0">
            and m.category_id in
            <foreach collection="idList" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        and ifnull(m.delete_flag,'0') !='1'
        order by m.id desc
        <if test="offset != null and rows != null">
            limit #{offset},#{rows}
        </if>
    </select>

    <select id="countsByMaterial" resultType="java.lang.Long">
        SELECT
        COUNT(m.id)
        FROM hswift_material m
        left JOIN hswift_material_extend me on m.id = me.material_id and ifnull(me.delete_Flag,'0') !='1'
        left JOIN hswift_unit u on m.unit_id = u.id and ifnull(u.delete_Flag,'0') !='1'
        left JOIN hswift_material_category mc on m.category_id = mc.id and ifnull(mc.delete_Flag,'0') !='1'
        WHERE 1=1
        and me.default_flag=1
        <if test="barCode != null">
            <bind name="bindBarCode" value="'%'+barCode+'%'"/>
            and me.bar_code like #{bindBarCode}
        </if>
        <if test="name != null">
            <bind name="bindName" value="'%'+name+'%'"/>
            and m.name like #{bindName}
        </if>
        <if test="standard != null">
            <bind name="bindStandard" value="'%'+standard+'%'"/>
            and m.standard like #{bindStandard}
        </if>
        <if test="model != null">
            <bind name="bindModel" value="'%'+model+'%'"/>
            and m.model like #{bindModel}
        </if>
        <if test="idList.size()>0">
            and m.category_id in
            <foreach collection="idList" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        and ifnull(m.delete_flag,'0') !='1'
    </select>

    <select id="findUnitList" resultType="com.hswift.erp.datasource.entities.Unit">
        select u.* from hswift_unit u
        left join hswift_material m on m.unit_id=u.id and ifnull(m.delete_flag,'0') !='1'
        where m.id = #{mId}
        and ifnull(u.delete_flag,'0') !='1'
    </select>

    <select id="findById" parameterType="com.hswift.erp.datasource.entities.MaterialExample" resultMap="ResultAndUnitMap">
        select m.*,u.name unit_name from hswift_material m
        left join hswift_unit u on m.unit_id=u.id and ifnull(u.delete_flag,'0') !='1'
        where m.id = #{id}
        and ifnull(m.delete_flag,'0') !='1'
    </select>

    <select id="findByIdWithBarCode" parameterType="com.hswift.erp.datasource.entities.MaterialExample" resultMap="ResultAndUnitMap">
        select m.*,u.name unit_name,me.bar_code m_bar_code, me.commodity_unit, me.purchase_decimal, me.commodity_decimal,
        me.wholesale_decimal, me.low_decimal
        from hswift_material m
        left join hswift_material_extend me on m.id=me.material_id and ifnull(me.delete_Flag,'0') !='1'
        left join hswift_unit u on m.unit_id=u.id and ifnull(u.delete_Flag,'0') !='1'
        where me.id = #{meId}
        and ifnull(m.delete_flag,'0') !='1'
    </select>

    <select id="findBySelectWithBarCode" parameterType="com.hswift.erp.datasource.entities.MaterialExample" resultMap="ResultAndUnitMap">
        select m.*,u.name unit_name,mc.name categoryName,me.bar_code m_bar_code,me.id meId,me.commodity_unit from hswift_material m
        left join hswift_material_extend me on m.id=me.material_id and ifnull(me.delete_Flag,'0') !='1'
        left join hswift_unit u on m.unit_id=u.id and ifnull(u.delete_Flag,'0') !='1'
        left JOIN hswift_material_category mc on m.category_id = mc.id and ifnull(mc.delete_Flag,'0') !='1'
        where m.enabled=1 and me.id is not null
        <if test="q != null and q !=''">
            <bind name="bindKey" value="'%'+q+'%'"/>
            and (me.bar_code like #{bindKey} or m.name like #{bindKey} or m.standard like #{bindKey} or m.model like #{bindKey})
        </if>
        <if test="idList.size()>0">
            and m.category_id in
            <foreach collection="idList" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        and ifnull(m.delete_flag,'0') !='1'
        ORDER BY id desc
        <if test="offset != null and rows != null">
            limit #{offset},#{rows}
        </if>
    </select>

    <select id="findBySelectWithBarCodeCount" resultType="java.lang.Integer">
        select count(1) from hswift_material m
        left join hswift_material_extend me on m.id=me.material_id and ifnull(me.delete_Flag,'0') !='1'
        left join hswift_unit u on m.unit_id=u.id and ifnull(u.delete_Flag,'0') !='1'
        where m.enabled=1 and me.id is not null
        <if test="q != null">
            <bind name="bindKey" value="'%'+q+'%'"/>
            and (me.bar_code like #{bindKey} or m.name like #{bindKey} or m.standard like #{bindKey} or m.model like #{bindKey})
        </if>
        <if test="idList.size()>0">
            and m.category_id in
            <foreach collection="idList" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        and ifnull(m.delete_flag,'0') !='1'
    </select>

    <select id="findByAll" parameterType="com.hswift.erp.datasource.entities.MaterialExample" resultMap="ResultMapList">
        select m.*,u.name unitName, mc.name categoryName,me.commodity_unit,me.purchase_decimal, me.commodity_decimal,
        me.wholesale_decimal, me.low_decimal
        FROM hswift_material m
        left join hswift_material_extend me on m.id=me.material_id and ifnull(me.delete_Flag,'0') !='1'
        left JOIN hswift_unit u on m.unit_id = u.id and ifnull(u.delete_Flag,'0') !='1'
        left JOIN hswift_material_category mc on m.category_id = mc.id and ifnull(mc.delete_Flag,'0') !='1'
        where 1=1
        and me.default_flag=1
        <if test="barCode != null">
            <bind name="bindBarCode" value="'%'+barCode+'%'"/>
            and me.bar_code like #{bindBarCode}
        </if>
        <if test="name != null">
            <bind name="bindName" value="'%'+name+'%'"/>
            and m.name like #{bindName}
        </if>
        <if test="standard != null">
            <bind name="bindStandard" value="'%'+standard+'%'"/>
            and m.standard like #{bindStandard}
        </if>
        <if test="model != null">
            <bind name="bindModel" value="'%'+standard+'%'"/>
            and m.model like #{bindModel}
        </if>
        <if test="idList.size()>0">
            and m.category_id in
            <foreach collection="idList" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        and ifnull(m.delete_flag,'0') !='1'
        order by m.id desc
    </select>
    <select id="findByMaterialName"  resultType="com.hswift.erp.datasource.entities.Material">
        select m.*
        FROM hswift_material m
        where 1=1
        <if test="name != null">
            and m.name =#{name}
        </if>
        and ifnull(m.delete_flag,'0') !='1'
    </select>

    <select id="getMaterialEnableSerialNumberList" parameterType="java.util.Map" resultMap="ResultAndUnitMap">
        select m.*,me.bar_code m_bar_code from hswift_material m
        left join hswift_material_extend me on m.id=me.material_id and ifnull(me.delete_Flag,'0') !='1'
        where 1=1
        and m.enabled=1
        and m.enable_serial_number ='1'
        <if test="q != null and q !=''">
            <bind name="bindKey" value="'%'+q+'%'"/>
            and (m.name like #{bindKey} or m.standard like #{bindKey} or m.model like #{bindKey})
        </if>
        and ifnull(m.delete_flag,'0') !='1'
        order by m.id desc
        <if test="offset != null and rows != null">
            limit #{offset},#{rows}
        </if>
    </select>

    <select id="getMaterialEnableSerialNumberCount" resultType="java.lang.Long">
        select count(me.id) from hswift_material m
        left join hswift_material_extend me on m.id=me.material_id and ifnull(me.delete_Flag,'0') !='1'
        where 1=1
        and m.enabled ='1'
        and m.enable_serial_number ='1'
        <if test="q != null and q !=''">
            <bind name="bindKey" value="'%'+q+'%'"/>
            and (m.name like #{bindKey} or m.standard like #{bindKey} or m.model like #{bindKey})
        </if>
        and ifnull(m.delete_flag,'0') !='1'
    </select>

    <update id="batchDeleteMaterialByIds">
        update hswift_material
        set delete_flag='1'
        where 1=1
        and ifnull(delete_flag,'0') !='1'
        and id in (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
    </update>
    <select id="getMaterialListByCategoryIds"  resultMap="com.hswift.erp.datasource.mappers.MaterialMapper.BaseResultMap">
        select
        <include refid="com.hswift.erp.datasource.mappers.MaterialMapper.Base_Column_List" />
        from hswift_material
        where 1=1
        and category_id in (
        <foreach collection="categoryIds" item="categoryId" separator=",">
            #{categoryId}
        </foreach>
        )
        and ifnull(delete_flag,'0') !='1'
    </select>
    <select id="getMaterialListByUnitIds"  resultMap="com.hswift.erp.datasource.mappers.MaterialMapper.BaseResultMap">
        select
        <include refid="com.hswift.erp.datasource.mappers.MaterialMapper.Base_Column_List" />
        from hswift_material
        where 1=1
        and unit_id in (
        <foreach collection="unitIds" item="unitId" separator=",">
            #{unitId}
        </foreach>
        )
        and ifnull(delete_flag,'0') !='1'
    </select>

    <select id="getMaxBarCode" resultType="java.lang.String">
        select max(CAST(l.bar_code AS SIGNED)) bar_code from hswift_material_extend l
        where 1=1
        and ifnull(l.delete_Flag,'0') !='1'
    </select>

    <select id="getMaterialByMeId" parameterType="com.hswift.erp.datasource.entities.MaterialExample" resultMap="ResultMapList">
        select m.*,me.bar_code,u.name unitName, mc.name categoryName
        FROM hswift_material m
        left join hswift_material_extend me on m.id=me.material_id and ifnull(me.delete_Flag,'0') !='1'
        left JOIN hswift_unit u on m.unit_id = u.id and ifnull(u.delete_flag,'0') !='1'
        left JOIN hswift_material_category mc on m.category_id = mc.id and ifnull(mc.delete_Flag,'0') !='1'
        where 1=1
        <if test="meId != null">
            and me.id = #{meId}
        </if>
        and ifnull(m.delete_flag,'0') !='1'
    </select>

    <select id="getMaterialNameList" resultType="java.lang.String">
        select m.name from hswift_material m
        where m.name is not null and m.name !='' and ifnull(m.delete_flag,'0') !='1'
        group by m.name
        order by m.name asc
    </select>

    <select id="getMaterialByBarCode" parameterType="com.hswift.erp.datasource.entities.MaterialExample" resultMap="ResultAndUnitMap">
        select m.*,u.name unit_name,me.bar_code m_bar_code, me.commodity_unit, me.purchase_decimal, me.commodity_decimal,
        me.wholesale_decimal, me.low_decimal
        from hswift_material m
        left join hswift_material_extend me on m.id=me.material_id and ifnull(me.delete_Flag,'0') !='1'
        left join hswift_unit u on m.unit_id=u.id and ifnull(u.delete_Flag,'0') !='1'
        where me.bar_code = #{barCode}
        and ifnull(m.delete_flag,'0') !='1'
    </select>

    <update id="setUnitIdToNull">
        update hswift_material
        set unit_id = null
        where 1=1
        and ifnull(delete_flag,'0') !='1'
        and id = #{id}
    </update>
</mapper>